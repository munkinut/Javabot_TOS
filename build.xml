<project name="Javabot_TOS" default="dist" basedir=".">
    <description>
        Build file for Javabot_TOS
    </description>

    <property name="version" value="3_devel"/>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="out/production/Javabot_TOS"/>
    <property name="dist" location="dist"/>
    <property name="lib" location="lib"/>
    <property name="groovy" location="C:\Program Files (x86)\Groovy"/>
    <property name="config" location="config"/>
    <property name="images" location="images"/>
    <property name="loggingConfig" value="${user.dir}\\config\\javabot.logging.properties"/>
    <property name="javabotConfig" value="${user.dir}\\config\\javabot.properties"/>

    <path id="project.class.path">
        <fileset dir="${lib}" includes="*.jar"/>
        <fileset dir="${groovy}\lib" includes="*.jar" excludes=""/>
        <pathelement location="${build}"/>
    </path>

    <path id="test.class.path">
        <fileset dir="${dist}/lib" includes="*.jar"/>
        <!--fileset dir="C:\apache-groovy-sdk-3.0.3\groovy-3.0.3\lib" includes="*.jar" excludes="ant-1.10.7.jar"/>-->
        <pathelement location="${build}"/>
    </path>

    <target name="run_tests" description="Runs the Junit tests." depends="dist">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="test.class.path"/>
            </classpath>
            <!--<formatter type="brief" usefile="false" />-->
            <batchtest>
                <fileset dir="${src}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac includeantruntime="false" srcdir="${src}" destdir="${build}" classpathref="project.class.path">
            <!-- <compilerarg value="-Xlint:unchecked" /> -->
        </javac>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/javabot_tos_${version}.jar"  manifest="Manifest.mf">
            <!-- <fileset dir="${images}"/> -->
            <fileset dir="${build}"/>
        </jar>

        <copy todir="${dist}/lib/" >
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${groovy}\lib">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <path id="run.class.path">
        <fileset dir="${dist}/lib" includes="*.jar"/>
    </path>

    <target name="run_jar" description="Runs Javabot from the generated jar file." depends="dist">
        <java fork="true" classpathref="run.class.path" jar="${dist}/lib/javabot_tos_${version}.jar">
            <jvmarg value="-Djava.security.policy=client.policy"/>
            <jvmarg value="-Djava.util.logging.config.file=${loggingConfig}"/>
            <jvmarg value="-Djavabot.properties.file=${javabotConfig}"/>
            <jvmarg value="-Djava.rmi.server.codebase=http://localhost:8000/"/>
        </java>
    </target>

    <target name="run" description="Runs Javabot from the compiled classes" depends="dist">
        <java fork="true" classpathref="run.class.path" classname="org.javabot.main.JavaBot">
            <jvmarg value="-Djava.security.policy=client.policy"/>
            <jvmarg value="-Djava.util.logging.config.file=${loggingConfig}"/>
            <jvmarg value="-Djavabot.properties.file=${javabotConfig}"/>
            <jvmarg value="-Djava.rmi.server.codebase=http://localhost:8000/"/>
        </java>
    </target>

</project>
