JavaBot User Guide (c) Warren Milburn 2001
Revised 2020

Introduction

Quick Start

1) Download a release from Github (https://github.org/munkinut/Javabot_TOS).

2) Download the dependencies and put them in a "lib" directory.

3) Edit the users.xml file in the config directory and replace my defaults with your own.

4) Edit the javabot.properties file in the config directory and change the settings there:

    This contains directives for the server and port, channel and the bots name.
    Please ensure you specify the channel name in lowercase and starting with a '#'.
    The file also contains switches for various options such as autovoice and flood protection,
    some of which work, and some don't yet. There are also some hard-coded paths that
    will need to be edited to suit your own system.

5) Edit the javabot.logging.properties file if you want to control the messsages you see on
    the console.

6) Make sure you have ant installed and compile Javabot using:

    ant dist

7) Run Javabot using ant:

    ant run
     or
    ant run_jar
     or
    run.bat

8) Start Javabot.

    Click the "Connect" button or choose "Connect" from the "File" menu.

9) Once connected JavaBot will enter the channel on the network you specified
   in the javabot.properties file and set some default flags.

10) You may then enter the channel on which the bot is sitting.
   It is obviously best to send the bot to a channel on which it can gain ops.

11) You will be met with the greet message which you can change in the users.xml file.

12) Authenticate yourself with the bot  // THIS DOES NOT WORK RIGHT NOW

    /msg <botname> auth <username> <password>

    where <botname> is the name of your JavaBot, <username> is the username 
    you set up previously, and <password> is the password you set up 
    previously.

    Eg. /msg javabot auth wibble wobble

13) That's it!

14) Okay so you want it to do more things?  Read the command list below :))

// SOME OF THESE WORK, AND MOST DON'T RIGHT NOW

auth    -   authenticates a user with the bot

    /msg <bot> auth <username> <password>

pass    -   allows a user to change their password

    /msg <bot> pass <oldpass> <newpass>

greet   -   allows a user to change their greet (user requires +f (friend) flag)

    /msg <bot> greet <greet>

adduser -   allows an owner to add a new user to the bot (requires +n flag)

    /msg <bot> adduser <username>

deluser -   allows an owner to delete a user from the bot (requires +n flag)

    /msg <bot> deluser <username>

users - allows an op to list the bot users

    /msg <bot> users

addfriend   -   allows an op to add a friend flag to an existing user (requires +o)

    /msg <bot> addfriend <username>

addvoice    -   allows an op to add a voice flag to an existing user (requires +o)

    /msg <bot> addvoice <username>

addop   -   allows an op to add an op flag to an existing user (requires +m)

    /msg <bot> addop <username>

addmaster   -   allows an owner to add a master flag to an existing user (requires +n)

    /msg <bot> addmaster <username>

delfriend   -   allows an op to delete a friend flag from an existing user (requires +o)

    /msg <bot> delfriend <username>

delvoice    -   allows an op to delete a voice flag from an existing user (requires +o)

    /msg <bot> delvoice <username>

delop   -   allows a master to delete an op flag from an existing user (requires +m)

    /msg <bot> delop <username>

delmaster   -   allows an owner to delete a master flag from an existing user (requires +n)

    /msg <bot> delmaster <username>

flags   -   allows a user with the correct privileges to set or unset flags on an existing user

    /msg <bot> flags <username> <+|-[fvom]>

userfile    -   allows an owner to reload the userfile (after manual changes have been made)

    /msg <bot> userfile

kick    -   allows an op to instruct the bot to kick someone from the channel

    /msg <bot> kick <nick> <channel>

ban -   allows an op to instruct the bot to ban someone from the channel

    /msg <bot> ban <banmask> <channel>

kickban -   allows an op to instruct the bot to kick and ban someone from the channel

    /msg <bot> kickban <nick> <banmask> <channel>

invite  -   allows an op to request an invitation to a locked channel

    /msg <bot> invite <nick> <channel>

addban - allows an op to add a perm ban in the bot

    /msg <bot> addban <banmask> <channel>

    Eg. /msg javabot addban *!*myident@*.mydomain.org #cheesy

delban - allows an op to delete a perm ban in the bot

    /msg <bot> delban <banmask> <channel> #cheesy

    Eg. /msg javabot delban *!*myident@*.mydomain.org

bans - allows an op to list the current banmasks in the bot

    /msg <bot> bans

!voiceme    -   allows a user with +v flag to get voice from the bot (where autovoice is disabled)
!opme   -   allows a user with +o flag to get ops from the bot
!help   -   triggers the bot to recite help on available commands
!version    -   triggers the bot to recite its version information
!date   -    triggers the bot to recite the current date
!lc -   allows a user with +o flag to lock the channel (sets channel mode to +mi)
!uc -   allows a user with +o flag to unlock the channel (sets channel mode to -mi)

There are also scripts in the scripts directory (THESE DO WORK RIGHT NOW). To invoke a script:

    !<botname> <script>   (without the script's file extension)

    Eg:

    !<botname> date
    !<botname> version
    !<botname> google <query>

